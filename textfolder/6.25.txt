6.25

---------------------------------------------------------------------------
アニメーション管理の実装について
6.24参照
アニメーションのData部は画像ID,表示フレームとなっている
std::vector<std::vector<int>>, std::vector<std::array<2,int>>

vectorの中に複数のデータを格納しているように見えるstlを今回は使用する
二つのものを一つのものとして扱うstl	::std::pair
書き方
std::pair<型名１,型名２> 変数名;

型名１,型名2にペアにしたい型を入れることで二つのものを一つのものとして扱える
ちなみに、同じ型同士を入れることも可能

ワンショットかループかどうかの判別はデータの最後にダミーデータを入れることで判別する
ワンショットのアニメーションのほうは最後にダミーデータとして-1を入れてあげてアニメーション時に
-1がなければループさせて-1ならばアニメーションを終了させる

----------------------------------------------------------------------------
emplace_backは結構使えるやつ
例、pairを新しく作る場合
data.push_back(std::make_pair(IMAGE_ID("キャラ")[0], 30));
↓
data.emplace_back(std::make_pair(IMAGE_ID("キャラ")[0], 30));
↓
data.emplace_back(IMAGE_ID("kyara")[0], 30);

このようにemplace_backは賢いからmake_pairまで省略できる

-----------------------------------------------------------------------------
課題
_animMap[key] = data;
のコンストラクタを二回呼びから一回呼びに変更せよ

ヒント::ユニークポインターの考え方が役に立つ