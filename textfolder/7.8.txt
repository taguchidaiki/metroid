7.8

デバック機能の追加
スロー機能

概要

GameScene()
↓
Update();
↓
Draw();　←　Gameのシーン用のバッファ
↓
Draw();　←　バックバッファのDraw()
			→　Debugのスクリーンの追加
↓　←　AddDrawDebug()	→　表示のONOFF
			→　スローの制御
GameScene()に戻る

実装方法
※sleep()は絶対使用不可　→　プログラムが完全にストップするからデータも取得できないしウィンドウも閉じれない
一番後ろで時間の計測を行う　→　start()
Update()やDraw()の処理を走らせる
一番前で時間の計測を再度行う　→　end();
endとstartの差分から実行時間を図る
start()が110
end()が170
だったら差分は60

スローはwhileの空回しで実装をする
break条件にはProcessMessage()を使用する(これをしないとプログラムを閉じることもできない)

ゲームエンジンは一秒間にどんだけ動くのかなどを管理している
昔のゲームエンジン
移動量はそのままに時間も固定にしている

今のゲームエンジン
前回の起動時間からこれだけかかった
これだけかかったなら結果としてこれだけ動く
移動量も時間も可変化している

windowsのtime関数は精度が悪いので使わない
Dxlibのtime関数は依存度を下げるため使わない
今回は、stlのchronoを使用する
start end はクロノで　ダブルでwaitTimeを定義する

waitMode()では2つのキーを押すことで増減する

if(_waitTime)の中ではstartの中にnow命令で時間の取得
endの中にもnowで改めて時間の取得
do whileを使用して機能を作る
