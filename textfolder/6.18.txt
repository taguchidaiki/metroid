6/18

-------------------------------------------------------------------
dxlibの命令を使うときの注意点
SysInit()(DxLib_Init())を使用しなければdxlib系の命令は使えない
静的なインスタンスを行うとき、インスタンス内でdxlib系の命令を使ったとしても使えない
変数は狭いスコープ内で宣言したほうがメモリ領域を壊しにくくなる　＝　安全性が上がる

-------------------------------------------------------------------
for文の使用注意点
for文の中でクラスの宣言を行うのは厳禁、intとかならまだ可愛げがあるがよろしいわけではない
for文の中でクラスのインスタンスとデリートがスコープが抜けるたびに呼び出されているので
一回の処理に対する重さが段違いで変わってくる

例
for()
{
  Vector2 pos;
}
これ×

Vector2 pos;
for()
{

}
これは〇

----------------------------------------------------------------------
今回は画像処理を管理するクラスの作成
画像の問い合わせ　→　管理クラスは問合せのある画像を渡す　→　なかったらロードして渡す

使うstlはmap

#include <map>

<宣言方法>
std::map<キーの型、連想配列の型(mapの型)> 変数名

キーの型はint,floatなんでもあり！string型でも大丈夫だけれども仕事とかでは使われない
stringだとその都度インスタンスが走るので遅いから

mapを使うときの注意点
・mapはキーの値を入れてあげたら配列のようにアクセスできるが、あろうがなかろうが(変数名)[キーの名前]と書くと
生成されてしまいnullptrでは存在チェックができない
なので、存在チェックをする際はmapのfind()を使用する
(変数名).find(キーの名前)　== (変数名).end();

------------------------------------------------------------------------
string型の文字列操作系の関数はよく使うので自前で勉強しておくこと