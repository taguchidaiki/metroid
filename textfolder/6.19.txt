6.19

----------------------------------------------------------------------
純粋仮想関数にした関数は継承側ではどれが純粋仮想関数なのかわからない
だから、純粋仮想関数にした関数は継承側では関数の()の後ろにoverrideと書くとわかりやすい
かつ、この記述をするとoverrideしていないとコンピュータ側から怒られるので書き忘れも減る！！
これは返り値や引数の違いも見分けられるので付けておくとミスが減る

----------------------------------------------------------------------
絶対にオーバライドさせたくない時は、前にvirtual,関数の()の後ろにfinalと入れる
自分が最後だという証明になるからこれをつけるとこれ以上の継承ができなくなる

----------------------------------------------------------------------
デザインパターン	シングルトン

一つしか存在しない、一つしか許容しないデザインパターン

誰でも作れる　→　コンストラクタがパブリックにあるから
だからコンストラクタをプライベートに移動してあげると誰も作れなくなる
ここで使うのがc言語の時に使ったstatic(ちなみにグローバル変数もstatic)
staticで宣言するとプログラムが走ったときにメモリが割り当てられる
シングルトンの実体を返す関数を作ってそれをstaticで宣言してあげるとシングルトンの80％くらい完成

----------------------------------------------------------------------
switchのdefaultは基本的には例外処理として扱って、それ以外の時の処理はしっかり
要素として書かないと後々バグとして変な動き方をするから要注意

----------------------------------------------------------------------
using
名前を書き換えることができる
例
using VecInt = std::vector<int>;

これでstd::vector<int>をVecIntと書き換えることができる

----------------------------------------------------------------------

& 参照でアクセスする際は書き換えが必要でない時ならconstをつけることを忘れないように！！
というか参照を使うならまずはconstをつけて変更の必要があるときだけはconstをはずす形にしたほうが
安全性の面ではよい

----------------------------------------------------------------------
